plugins {
	id 'dev.architectury.loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
}

loom {
	silentMojangMappingsLicense()
	accessWidenerPath = file("src/main/resources/iris.accesswidener")

	forge {
		convertAccessWideners = true
		mixinConfigs = [
				"mixins.oculus.json",
				"mixins.oculus.fantastic.json",
				"mixins.oculus.vertexformat.json",
				"mixins.oculus.bettermipmaps.json",
				"mixins.oculus.fixes.maxfpscrash.json",
				"oculus-batched-entity-rendering.mixins.json",
				"mixins.oculus.compat.sodium.json",
				"mixins.oculus.compat.indigo.json",
				"mixins.oculus.compat.indium.json",
				"mixins.oculus.compat.dh.json",
				"mixins.oculus.compat.pixelmon.json"
		]
	}
	mixin.defaultRefmapName = "oculus-mixins-refmap.json"
}

version = project.mod_version
group = project.maven_group

sourceSets {
	desktop {
	}

	vendored {
		java {
			compileClasspath += main.compileClasspath
		}
	}

	sodiumCompatibility {
		java {
			compileClasspath += main.compileClasspath
			compileClasspath += main.output
		}
	}

	main {
		java {
			compileClasspath += vendored.output
			runtimeClasspath += vendored.output
		}
	}
}

loom {
	runs {
		client {
			mods {
				oculus {
					sourceSet sourceSets.desktop
					sourceSet sourceSets.main
					sourceSet sourceSets.vendored
					sourceSet sourceSets.sodiumCompatibility
				}
			}
		}
	}
}

repositories {
	maven {
		name = "CurseForge"
		url = "https://cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}
	maven {
		url "https://maven.blamejared.com/"
	}
	maven {
		url "https://maven.neoforged.net/releases"
	}
	mavenCentral()
}

dependencies {
	minecraft "com.mojang:minecraft:${minecraft_version}"
	mappings loom.officialMojangMappings()
	forge "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

	implementation 'org.apache.ant:ant:1.10.11'
	modImplementation "maven.modrinth:rubidium:0.5.4"
	compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:0.3.5"))
	implementation(include("io.github.llamalad7:mixinextras-forge:0.3.5"))
	implementation(include('org.joml:joml:1.10.5'))
	modImplementation "org.embeddedt:embeddium-${minecraft_version}:${embeddium_version}"

	modCompileOnly(files("DistantHorizons-forge-2.0.4-a-dev-1.20.1.jar"))

	forgeRuntimeLibrary(implementation(project(path: ":glsl-relocated", configuration: "bundledJar"))) {
		transitive = false
	}
	forgeRuntimeLibrary(implementation(include("org.anarres:jcpp:1.4.14")))
}

processResources {
	inputs.property "version", project.version

	filesMatching("META-INF/mods.toml") {
		expand "version": project.version
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

// Configure Maven publishing.
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
